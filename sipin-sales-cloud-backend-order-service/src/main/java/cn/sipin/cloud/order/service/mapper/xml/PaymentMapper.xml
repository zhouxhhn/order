<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.sipin.cloud.order.service.mapper.PaymentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.sipin.sales.cloud.order.pojo.Payment">
        <id column="id" property="id" />
        <result column="order_id" property="orderId" />
        <result column="cashier_id" property="cashierId" />
        <result column="payment_no" property="paymentNo" />
        <result column="paid_at" property="paidAt" />
        <result column="status_id" property="statusId" />
        <result column="price" property="price" />
        <result column="real_receive_price" property="realReceivePrice" />
        <result column="give_change" property="giveChange" />
        <result column="partner_id" property="partnerId" />
        <result column="partner_trade_no" property="partnerTradeNo" />
        <result column="merchant_number" property="merchantNumber" />
        <result column="merchant_name" property="merchantName" />
        <result column="account" property="account" />
        <result column="is_deleted" property="isDeleted" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
    </resultMap>

    <select id="index" resultMap="BaseResultMap">
        select payment.* from payment left join orders on payment.`order_id` = orders.id
        <where>
            <if test="request !=null and request.getOrderNo() != null">
                AND orders.no = #{request.orderNo}
            </if>
            <if test="shopCode !=null">
                AND orders.shop_code = #{shopCode}
            </if>
            <if test="request !=null and request.getBeforeAt() != null">
                AND `payment`.`created_at` &gt;= #{request.beforeAt}
            </if>
            <if test="request !=null and request.getEndAt() != null">
                AND `payment`.`created_at` &lt;= #{request.endAt}
            </if>
        </where>
        ORDER BY `payment`.`created_at` DESC
        <if test="limit != null and offset != null">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

    <select id="sumPayment" resultMap="BaseResultMap">
        select count(*) as id,sum(real_receive_price) as real_receive_price,payment.partner_id from payment left join orders on payment.order_id = orders.id
        <where>
            <if test="shopCode !=null">
                AND `orders`.`shop_code`= #{shopCode}
            </if>

            <if test="receive !=null">
                <![CDATA[
                 AND `payment`.`status_id` <>#{receive} or `payment`.`status_id` is null
                 ]]>
            </if>

            <if test="back !=null">
                <![CDATA[
                  AND `payment`.`status_id` = #{back}
                 ]]>
            </if>
            <if test="request !=null and request.getBeforeAt() != null">
                AND `payment`.`created_at` &gt;= #{request.beforeAt}
            </if>
            <if test="request !=null and request.getEndAt() != null">
                AND `payment`.`created_at` &lt;= #{request.endAt}
            </if>
        </where>
        group by payment.partner_id
    </select>

    <select id="selectPayment" resultMap="BaseResultMap">
        SELECT * FROM payment WHERE order_id = #{id}
    </select>

    <select id="backendIndex" resultMap="BaseResultMap">
        select payment.*,orders.no as no,orders.shop_code as shopCode,orders.agency_code as agencyCode from payment left join orders on payment.`order_id` = orders.id
        <where>
            <if test="request !=null and request.getOrderNo() != null">
                <bind name="noLike" value="'%' + request.getOrderNo() + '%'"/>
                AND orders.no LIKE #{noLike}
            </if>
            <if test="request !=null and request.getShopCode() != null">
                AND orders.shop_code = #{request.shopCode}
            </if>
            <if test="request !=null and request.getAgencyCode() != null">
                AND orders.agency_code = #{request.agencyCode}
            </if>
            <if test="request !=null and request.getExchangeMode() != null">
                AND payment.partner_id = #{request.exchangeMode}
            </if>
            <if test="request !=null and request.getExchangeType() != null and request.getExchangeType()==1">
                AND payment.status_id = #{exchangeType}
            </if>
            <if test="request !=null and request.getExchangeType() != null and request.getExchangeType()==0">
                AND payment.status_id != #{exchangeType}
            </if>
            <if test="request !=null and request.getBeforeAt() != null">
                AND `payment`.`created_at` &gt;= #{request.beforeAt}
            </if>
            <if test="request !=null and request.getEndAt() != null">
                AND `payment`.`created_at` &lt;= #{request.endAt}
            </if>
        </where>
        ORDER BY `payment`.`created_at` DESC
        <if test="limit != null and offset != null">
            LIMIT #{limit} OFFSET #{offset}
        </if>
    </select>

</mapper>
